setwd("~/Desktop/SCW/Lesson4_ProgrammingR")
gapminder <- read.table("gapminder.txt", headers = TRUE)
gapminder <- read.table("gapminder.txt", header = TRUE)
farenheit_to_celsius <- function(temp){
celsius <- (temp-32)*5/9
return (celsius)
}
fahrenheit_to_celsius(96)
gapminder <- read.table("gapminder.txt", header = TRUE)
fahrenheit_to_celsius <- function(temp){
celsius <- (temp-32)*5/9
return (celsius)
}
fahrenheit_to_celsius(96)
celsius_to_kelvin <- function(temp_c){
kelvin <- temp_c+273.15
return(kelvin)
}
celsius_to_kelvin(temp_c = 35.55556)
fahrenheit_to_kelvin <- function(temp_f){
celsius <- fahrenheit_to_celsius(temp_f)
kelvin <- celsius_to_kelvin(celsius)
return(kelvin)
}
fahrenheit_to_kelvin(96)
MeanLifeExp <- function(Continent){
Subset_Continent_LifeExp <- gapminder[gapminder$continent == Continent,"lifeExp"]
lifeExp <- mean(Subset_Continent_LifeExp)
return(lifeExp)
}
MeanLifeExp("Europe")
# Challenge 3
x <- 8
if(x>=10){
print("x is greater than or equal to 10")
}else{
print("x is smaller than 10")
}
if(x>10){
print("x is greater than 10")
}else if(x>5){
print("x is greater than 5 and less than 10")
}else{
print("x is smaller than 5")
}
# Challenge 2
AsiaLifeExp <- MeanLifeExp("Asia")
if(AsiaLifeExp >= 50){
print("Life Expectancy of Asis is greater than or equal to 50")
}else{
print("Life Expectancy of Asis is lower than 50")
}
for (i in 1:10){
print(i)
}
menuItems <- c("chicken","soup","salad","tea")
menuCost <- c(4.99,2.99,3.29,1.89)
menuType <- factor(c("solid","liquid","solid","liquid"))
myorder_df <- data.frame(menuItems,menuType,menuCost)
View(myorder_df)
for(items in myorder_df$menuItems){
print(items)
}
for(items in myorder_df$menuItems){
myorder_df_subset <- myorder_df[myorder_df$menuItems == items, ]
print(items)
print(myorder_df_subset$menuCost)
}
# Challenge 3
gapminder <- read.table("gapminder.txt", header = TRUE)
continent_list <- unique(gapminder$continent)
for(continent in continent_list){
continent_subset <- gapminder[gapminder$continent == continent,"lifeExp"]
tmp <- mean(continent_subset)
if(tmp >= 50){
print(paste0("Life expectancy in ", continent, "is greater than or equal to 50"))
}else{
print(paste0("Life expectancy in ", continent, "is less than 50"))
}
}
for(continent in continent_list){
continent_subset <- gapminder[gapminder$continent == continent,"lifeExp"]
tmp <- mean(continent_subset)
if(tmp >= 50){
print(paste0("Life expectancy in ", continent, " is greater than or equal to 50"))
}else{
print(paste0("Life expectancy in ", continent, " is less than 50"))
}
}
install.packages("ggplot2")
install.packages("rmarkdown")
library(ggplot2)
head(gapminder)
gapminder <- read.table("gapminder.txt", header = TRUE)
head(gapminder)
ggplot(data=gapminder, aes(x=gdpPercap,y=lifeExp))+geom_point()
View(gapminder)
ggplot(data=gapminder, aes(x=year,y=lifeExp))+geom_point()
ggplot(data=gapminder, aes(x=year,y=lifeExp, color = continent))+geom_point()
ggplot(data=gapminder, aes(x=year,y=lifeExp, color = continent))+
geom_line()
ggplot(data=gapminder, aes(x=year,y=lifeExp, by=country, color = continent))+
geom_line()
ggplot(data=gapminder, aes(x=year,y=lifeExp, by=country, color = continent))+
geom_line() +
geom_point()
ggplot(data=gapminder, aes(x=year,y=lifeExp, by=country))+
geom_line(aes(color = continent)) +
geom_point()
ggplot(data=gapminder, aes(x=year,y=lifeExp, by=country))+
geom_line(color = "blue") +
geom_point()
ggplot(data=gapminder, aes(x=year,y=lifeExp, by=country))+
geom_point()+
geom_line(color = "blue")
ggplot(data=gapminder, aes(x=gdpPercap,y=lifeExp))+
geom_point(alpha=0.5)
ggplot(data=gapminder, aes(x=gdpPercap,y=lifeExp))+
geom_point(alpha=0.5) +
scale_x_log10()
ggplot(data=gapminder, aes(x=gdpPercap,y=lifeExp))+
geom_point(alpha=0.5) +
scale_x_log10() +
geom_smooth(method = "lm")
ggplot(data=gapminder, aes(x=gdpPercap,y=lifeExp))+
geom_point(alpha=0.5) +
scale_x_log10() +
geom_smooth(method = "lm", size = 1.5)
ggplot(data=gapminder, aes(x=gdpPercap,y=lifeExp))+
geom_point(alpha=0.5, color=red, size=0.5) +
scale_x_log10() +
geom_smooth(method = "lm", size = 1.5)
ggplot(data=gapminder, aes(x=gdpPercap,y=lifeExp))+
geom_point(alpha=0.5, color="red", size=0.5) +
scale_x_log10() +
geom_smooth(method = "lm", size = 1.5)
ggplot(data=gapminder, aes(x=gdpPercap,y=lifeExp, color = continent))+
geom_point(size=0.5, shape=17) +
scale_x_log10() +
geom_smooth(method = "lm", size = 1.5)
az_row <- startsWith(as.vector(gapminder$country), c('A','Z'))
az_countries <- gapminder[az_row,]
View(az_countries)
ggplot(data = az_countries, aes(x=year, y=lifeExp, color=continent))+
geom_line() +
facet_wrap(~country)
ggplot(data = az_countries, aes(x=year, y=lifeExp, color=continent))+
geom_line() +
facet_wrap(~country) +
labs(
x = "Year", ## x axis title
y = "Life Expectancy", ## y axis title
title = "Figure 1", ## main title
color = "Continent"
) +
theme(axis.text.x=element_text(angle=45),axis.ticks.x=element_blank())
lifeExp_plot <- ggplot(data = az_countries, aes(x=year, y=lifeExp, color=continent))+
geom_line() +
facet_wrap(~country) +
labs(
x = "Year", ## x axis title
y = "Life Expectancy", ## y axis title
title = "Figure 1", ## main title
color = "Continent"
) +
theme(axis.text.x=element_text(angle=45),axis.ticks.x=element_blank())
ggsave(filename = "lifeExp.png", plot = lifeExp_plot, width = 12, height = 10, dpi = 300, units="cm")
ggsave("myPlot.pdf")
# Challenge 6
ggplot(data = gapminder[gapminder$country=="Sweden",], aes(x=year, y=lifeExp)) +
geom_bar(fill='orange', stat = "identity")
ggplot(data = e_countries, aes(x=year, y=pop/1000000, fill = continent))+
geom_bar(stat = "identity")+
facet_wrap(~country)+
labs(
x = "Year",
y = "Population (millions)",
title = "Figure 2",
fill = "Continent"
)+
theme(axis.text.x=element_text(angle=45), axis.ticks.x=element_blank()) +
theme_bw()
e_rows <- startsWith(as.vector(gapminder$country), c('E'))
e_countries <- gapminder[e_rows,]
ggplot(data = e_countries, aes(x=year, y=pop/1000000, fill = continent))+
geom_bar(stat = "identity")+
facet_wrap(~country)+
labs(
x = "Year",
y = "Population (millions)",
title = "Figure 2",
fill = "Continent"
)+
theme(axis.text.x=element_text(angle=45), axis.ticks.x=element_blank()) +
theme_bw()
setwd("~/Desktop/SCW/Lesson6_ReproducibleResearchR")
